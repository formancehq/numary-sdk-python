"""
    Ledger API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.10.0-rc.2
    Contact: support@numary.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from ledgerclient.api_client import ApiClient, Endpoint as _Endpoint
from ledgerclient.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from ledgerclient.model.error_response import ErrorResponse
from ledgerclient.model.logs_cursor_response import LogsCursorResponse


class LogsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.list_logs_endpoint = _Endpoint(
            settings={
                'response_type': (LogsCursorResponse,),
                'auth': [],
                'endpoint_path': '/{ledger}/logs',
                'operation_id': 'list_logs',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'ledger',
                    'page_size',
                    'page_size2',
                    'after',
                    'start_time',
                    'start_time2',
                    'end_time',
                    'end_time2',
                    'cursor',
                    'pagination_token',
                ],
                'required': [
                    'ledger',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'page_size',
                    'page_size2',
                ]
            },
            root_map={
                'validations': {
                    ('page_size',): {

                        'inclusive_maximum': 1000,
                        'inclusive_minimum': 1,
                    },
                    ('page_size2',): {

                        'inclusive_maximum': 1000,
                        'inclusive_minimum': 1,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'ledger':
                        (str,),
                    'page_size':
                        (int,),
                    'page_size2':
                        (int,),
                    'after':
                        (str,),
                    'start_time':
                        (datetime,),
                    'start_time2':
                        (datetime,),
                    'end_time':
                        (datetime,),
                    'end_time2':
                        (datetime,),
                    'cursor':
                        (str,),
                    'pagination_token':
                        (str,),
                },
                'attribute_map': {
                    'ledger': 'ledger',
                    'page_size': 'pageSize',
                    'page_size2': 'page_size',
                    'after': 'after',
                    'start_time': 'startTime',
                    'start_time2': 'start_time',
                    'end_time': 'endTime',
                    'end_time2': 'end_time',
                    'cursor': 'cursor',
                    'pagination_token': 'pagination_token',
                },
                'location_map': {
                    'ledger': 'path',
                    'page_size': 'query',
                    'page_size2': 'query',
                    'after': 'query',
                    'start_time': 'query',
                    'start_time2': 'query',
                    'end_time': 'query',
                    'end_time2': 'query',
                    'cursor': 'query',
                    'pagination_token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def list_logs(
        self,
        ledger,
        **kwargs
    ):
        """List the logs from a ledger  # noqa: E501

        List the logs from a ledger, sorted by ID in descending order.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.list_logs(ledger, async_req=True)
        >>> result = thread.get()

        Args:
            ledger (str): Name of the ledger.

        Keyword Args:
            page_size (int): The maximum number of results to return per page. . [optional] if omitted the server will use the default value of 15
            page_size2 (int): The maximum number of results to return per page. Deprecated, please use `pageSize` instead. . [optional] if omitted the server will use the default value of 15
            after (str): Pagination cursor, will return the logs after a given ID. (in descending order).. [optional]
            start_time (datetime): Filter transactions that occurred after this timestamp. The format is RFC3339 and is inclusive (for example, \"2023-01-02T15:04:01Z\" includes the first second of 4th minute). . [optional]
            start_time2 (datetime): Filter transactions that occurred after this timestamp. The format is RFC3339 and is inclusive (for example, \"2023-01-02T15:04:01Z\" includes the first second of 4th minute). Deprecated, please use `startTime` instead. . [optional]
            end_time (datetime): Filter transactions that occurred before this timestamp. The format is RFC3339 and is exclusive (for example, \"2023-01-02T15:04:01Z\" excludes the first second of 4th minute). . [optional]
            end_time2 (datetime): Filter transactions that occurred before this timestamp. The format is RFC3339 and is exclusive (for example, \"2023-01-02T15:04:01Z\" excludes the first second of 4th minute). Deprecated, please use `endTime` instead. . [optional]
            cursor (str): Parameter used in pagination requests. Maximum page size is set to 15. Set to the value of next for the next page of results. Set to the value of previous for the previous page of results. No other parameters can be set when this parameter is set. . [optional]
            pagination_token (str): Parameter used in pagination requests. Maximum page size is set to 15. Set to the value of next for the next page of results. Set to the value of previous for the previous page of results. No other parameters can be set when this parameter is set. Deprecated, please use `cursor` instead. . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            LogsCursorResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['ledger'] = \
            ledger
        return self.list_logs_endpoint.call_with_http_info(**kwargs)

